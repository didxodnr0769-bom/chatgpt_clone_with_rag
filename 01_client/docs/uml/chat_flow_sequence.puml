@startuml Chat Flow Sequence
!theme plain
skinparam backgroundColor #FFFFFF
skinparam sequenceArrowThickness 2
skinparam roundcorner 20

actor User as U
participant "Web UI" as UI
participant "chatService" as CS
participant "ollamaApiService" as OAS
participant "LLM" as LLM

== 채팅 시작 ==
U -> UI: 메시지 입력
UI -> UI: 사용자 메시지 생성
UI -> UI: 채팅 히스토리에 추가
UI -> CS: sendMessageStream() 호출

== 스트리밍 처리 ==
CS -> OAS: chatCompletionStream() 호출
OAS -> LLM: API 요청
LLM -> OAS: 스트림 응답 시작
OAS -> CS: 청크 데이터 전달
CS -> UI: onChunk 콜백으로 실시간 업데이트
UI -> UI: streamingMessage 상태 업데이트
UI -> UI: UI 실시간 렌더링
UI -> U: 실시간 채팅 메시지 출력

== 스트리밍 완료 ==
LLM -> OAS: 스트림 완료
OAS -> CS: 응답 완료
CS -> UI: 성공 결과 반환
UI -> UI: 최종 AI 메시지 생성
UI -> UI: 채팅 히스토리에 추가
UI -> UI: LocalStorage에 저장

== 사용자 정지 처리 ==
U -> UI: 스트리밍 정지 버튼 클릭
UI -> UI: AbortController.abort() 호출
UI -> UI: 현재까지 받은 메시지로 완료 처리
UI -> UI: LocalStorage에 저장

@enduml
